name: CAT
on:
  push:

jobs:
  CAT:
    runs-on: ubuntu-latest 
    steps:
  
      - uses: actions/checkout@v2

      - name: create shell script 
      - shell: bash
        run: |
          cat << EOF > auto-merge-from-master-to-feature.sh
          #!/bin/bash
          # set -x
          git checkout master
          git pull
          git branch
          git checkout master
          # dispaly all varaible 
          echo "---------------------Displaying all varaibles --------------------------------"

          echo "  TAG is $TAG"
          echo "  repository is $repository"
          echo "  workflow is $workflow"
          echo "  server_url is $server_url"
          echo "   run_id is $run_id"

          echo "---------------------counting number of feature branch --------------------------------"
          #count number feature branch that matches patter "feature-"
          NO_FEATURE_BRANCH=$(git branch -r | grep "feature-" | wc -l)
          echo "Total number of Feature branch are '$NO_FEATURE_BRANCH"
          COUNT=1
          echo "---------------------entering into while loop --------------------------------"
          while [ $COUNT -le $NO_FEATURE_BRANCH ]     
          do  
              echo "---------------------stroring  to which feature  branch need to merge ----"
            echo "Welcone $COUNT st feature branch"  
              FEATURE_BRANCH_NAME=$(git branch -r | grep "feature-" | cut -d'/' -f2 | head -$COUNT | tail -1) 
              echo "Target branch name is ${FEATURE_BRANCH_NAME}"  
          # raise a pull request to feature banch from master   
              echo "---------------------sending pull request  --------------------------------"
              gh pr create --title "merge from master after Release ${TAG}" --body "pull request sent by GitHub action" --base ${FEATURE_BRANCH_NAME} --head master
              PULL_REQUEST_STATUS=$(echo $?)
          # if pull request is successful the store pull request number
              echo "---------------------store pull request number-----------------------------"
              if [ "$PULL_REQUEST_STATUS" -eq 0 ]
              then
                  PULLREQUEST_NO=$(gh pr view master | head -10 | grep "number:" | cut -d':' -f2 | xargs echo -n)
                  PULLREQUEST_NO_STATUS=$(echo $?)
                  echo "the pull request number is $PULLREQUEST_NO"
          # if storing pull request number is successful then accept that pull request
                  if [ "$PULLREQUEST_NO_STATUS" -eq 0 ]
                  then     
                      gh pr merge ${PULLREQUEST_NO} --auto -m  
                      MERGE_STATUS=$(echo $?)    
          # store  job status in variable to be used in while sending slack message
                      echo "---------------------checking merge status---------------------------"
                      if [ "$MERGE_STATUS" -eq 0 ]
                      then 
                          MERGE_JOB_STATUS=$(echo "success") 
                      else
                          MERGE_JOB_STATUS=$(echo "failed")
                      fi
                      echo "the merge from master to ${FEATURE_BRANCH_NAME} is $MERGE_JOB_STATUS "            
          # check status for pom.xml file present in repo or not 
                      ls -la | grep pom.xml  
                      POM_XML_STATUS=$(echo $?)    
          # if merge is successful to bring pom version back to brach name 
          # the below step will be executed only if pom.xml file present & merge is successful
                      if [ "$MERGE_STATUS" -eq 0 ] && [ $POM_XML_STATUS -eq 0 ]
                      then     
                          git config --global user.email "githubactions@homedepot.com"
                          git config --global user.name "githubaction"
                          echo "checkout to  ${FEATURE_BRANCH_NAME} branch"
                          git checkout ${FEATURE_BRANCH_NAME}
                          git pull
                          mvn versions:set -DnewVersion=${FEATURE_BRANCH_NAME}-SNAPSHOT -DprocessAllModules -DgenerateBackupPoms=false
                          git add .
                          git commit -m "Updated Pom version back to branch name after merge from master"
                          git push https://${GITHUB_TOKEN}@github.com/${repository}.git
                      fi
                      echo "---------------------post slack message about merge status--------------"
                      curl -X POST -H 'Content-type: application/json' --data '{"text":"'${workflow}' ||| in '${repository}' repository  ||| merge from master to '${FEATURE_BRANCH_NAME}' is '${MERGE_JOB_STATUS}' ||| click below url to see logs ||| '${server_url}'/'${repository}'/actions/runs/'${run_id}'"}' ${SLACK_WEBHOOK}
                  fi    
              else
                  echo "---------------------post slack message about merge status--------------"
                  curl -X POST -H 'Content-type: application/json' --data '{"text":"'${workflow}' ||| in '${repository}' repository  |||merge from master to '${FEATURE_BRANCH_NAME}' is failed ||| click below url to see logs ||| '${server_url}'/'${repository}'/actions/runs/'${run_id}'"}' ${SLACK_WEBHOOK}
              fi
              COUNT=$((COUNT+1))
          done
          EOF
      - name: view shell script
        run: |
          cat auto-merge-from-master-to-feature.sh
          
